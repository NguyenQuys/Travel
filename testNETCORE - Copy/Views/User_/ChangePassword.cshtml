@{
    ViewData["Title"] = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model testNETCORE.ViewModels.UserViewModel

<h4>Change Password</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="ChangePassword" method="post" onsubmit="return validatePasswords()">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @* <div class="form-group">
                <label class="control-label">Old Password</label>
                <input name="oldPassword" class="form-control" type="password" required />
            </div> *@
            <div class="form-group">
                <label class="control-label">New Password</label>
                <input name="newPassword" class="form-control" type="password" required />
            </div>
            <div class="form-group">
                <label class="control-label">Confirm New Password</label>
                <input name="confirmNewPassword" class="form-control" type="password" required />
                <span asp-validation-for="Register.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-danger">Change Password</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Info">Back to User Info</a>
</div>

<script>
    function validatePasswords() {
        var newPassword = document.getElementsByName("newPassword")[0].value;
        var confirmPassword = document.getElementsByName("confirmNewPassword")[0].value;
        var passwordMatchMessage = document.querySelector("span[data-valmsg-for='Register.Password']");

        if (newPassword !== confirmPassword) {
            passwordMatchMessage.textContent = "Passwords do not match";
            return false;
        } else {
            passwordMatchMessage.textContent = "";
            return true;
        }
    }
</script>
