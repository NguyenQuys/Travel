// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testNETCORE.Models;

#nullable disable

namespace testNETCORE.Migrations
{
    [DbContext(typeof(JustTravelContext))]
    partial class JustTravelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("testNETCORE.Models.Category", b =>
                {
                    b.Property<int>("Idcategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Category");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcategory"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Idcategory")
                        .HasName("PK__Categori__6DB3A68A0405C12A");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("testNETCORE.Models.CountryCity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("ID")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Country___3214EC27F08A2066");

                    b.ToTable("Country_Cities", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.InvoiceDetail", b =>
                {
                    b.Property<string>("IdInvoice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_Invoice");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("IdTour")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ID_Tour");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("QuantityAdult")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityChildren")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StarDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StaticsticDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdInvoice")
                        .HasName("PK__InvoiceD__0540CA604785406E");

                    b.HasIndex("IdTour");

                    b.HasIndex("IdUser");

                    b.HasIndex("StaticsticDate");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("testNETCORE.Models.Like", b =>
                {
                    b.Property<int>("IdCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Cart");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCart"));

                    b.Property<string>("IdTour")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ID_Tour");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    b.HasKey("IdCart")
                        .HasName("PK__Like__72140ECF98CDAB72");

                    b.HasIndex("IdTour");

                    b.HasIndex("IdUser");

                    b.ToTable("Like", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.NavigationBar", b =>
                {
                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("ID_Menu");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Navigation_Bar", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.SearchHistory", b =>
                {
                    b.Property<int>("IdSearch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Search");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSearch"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SearchDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdSearch")
                        .HasName("PK__SearchHi__1BB97D065DD79A20");

                    b.HasIndex("IdUser");

                    b.ToTable("SearchHistory", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.Statistical", b =>
                {
                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomersNumber")
                        .HasColumnType("int");

                    b.Property<int>("DomesticTours")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    b.Property<int>("OverseasTour")
                        .HasColumnType("int");

                    b.Property<string>("TotalPrice")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.HasKey("CreatedDate")
                        .HasName("PK__Statisti__86A56E75B50EB986");

                    b.HasIndex("IdUser");

                    b.ToTable("Statistical", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.Tinh", b =>
                {
                    b.Property<string>("Province")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("Tinh", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.Tour", b =>
                {
                    b.Property<string>("IdTour")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ID_Tour");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Destination1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Destination2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Destination3")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<int>("Idcategory")
                        .HasColumnType("int")
                        .HasColumnName("ID_Category");

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image3")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("JourneyHightlight")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NdaysNnights")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<double>("PriceForAdult")
                        .HasColumnType("float");

                    b.Property<double>("PriceForChildren")
                        .HasColumnType("float");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TravelingSchedule")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.HasKey("IdTour")
                        .HasName("PK__Tour__D4CD957E39F747E9");

                    b.HasIndex("Idcategory");

                    b.ToTable("Tour", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.TravelGuide", b =>
                {
                    b.Property<string>("IdTravelGuide")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_TravelGuide");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cover_Image");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdTravelGuide")
                        .HasName("PK__TravelGu__BC5EA68C0A7AB681");

                    b.ToTable("TravelGuide", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Permission")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.HasKey("IdUser")
                        .HasName("PK__User__B97FFDFB38522D60");

                    b.HasIndex(new[] { "PhoneNumber" }, "UQ__User__85FB4E38470993A8")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D105348EDC7728")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("testNETCORE.Models.InvoiceDetail", b =>
                {
                    b.HasOne("testNETCORE.Models.Tour", "IdTourNavigation")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("IdTour")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceDe__ID_To__4CA06362");

                    b.HasOne("testNETCORE.Models.User", "IdUserNavigation")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceDe__ID_Us__4D94879B");

                    b.HasOne("testNETCORE.Models.Statistical", "StaticsticDateNavigation")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("StaticsticDate")
                        .HasConstraintName("FK__InvoiceDe__Creat__4BAC3F29");

                    b.Navigation("IdTourNavigation");

                    b.Navigation("IdUserNavigation");

                    b.Navigation("StaticsticDateNavigation");
                });

            modelBuilder.Entity("testNETCORE.Models.Like", b =>
                {
                    b.HasOne("testNETCORE.Models.Tour", "IdTourNavigation")
                        .WithMany("Likes")
                        .HasForeignKey("IdTour")
                        .IsRequired()
                        .HasConstraintName("FK__Like__ID_Tour__4E88ABD4");

                    b.HasOne("testNETCORE.Models.User", "IdUserNavigation")
                        .WithMany("Likes")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__Like__ID_UserI__4F7CD00D");

                    b.Navigation("IdTourNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("testNETCORE.Models.SearchHistory", b =>
                {
                    b.HasOne("testNETCORE.Models.User", "IdUserNavigation")
                        .WithMany("SearchHistories")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__SearchHis__ID_Us__5070F446");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("testNETCORE.Models.Statistical", b =>
                {
                    b.HasOne("testNETCORE.Models.User", "IdUserNavigation")
                        .WithMany("Statisticals")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__Statistic__ID_Us__5165187F");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("testNETCORE.Models.Tour", b =>
                {
                    b.HasOne("testNETCORE.Models.Category", "IdcategoryNavigation")
                        .WithMany("Tours")
                        .HasForeignKey("Idcategory")
                        .IsRequired()
                        .HasConstraintName("FK__Tour__ID_Categor__52593CB8");

                    b.Navigation("IdcategoryNavigation");
                });

            modelBuilder.Entity("testNETCORE.Models.Category", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("testNETCORE.Models.Statistical", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("testNETCORE.Models.Tour", b =>
                {
                    b.Navigation("InvoiceDetails");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("testNETCORE.Models.User", b =>
                {
                    b.Navigation("InvoiceDetails");

                    b.Navigation("Likes");

                    b.Navigation("SearchHistories");

                    b.Navigation("Statisticals");
                });
#pragma warning restore 612, 618
        }
    }
}
